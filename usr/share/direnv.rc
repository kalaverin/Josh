#
# https://direnv.net
#
# https://github.com/direnv/direnv/blob/master/docs/ruby.md
# https://github.com/direnv/direnv/wiki
# https://github.com/direnv/direnv/wiki/Nix
#
# Usage: use ruby <version>
#
# Loads the specified ruby version into the environment
#
# use_ruby() {
#     local ruby_dir=$HOME/.rubies/$1
#     load_prefix $ruby_dir
#     layout ruby
# }

layout_virtualenv() {
    dotenv

    if [ -z "$ASH_PY_ENVS_ROOT" ]; then
        echo " == fail ($0): ASH_PY_ENVS_ROOT isn't set"
        return 1

    elif [ ! -d "$ASH_PY_ENVS_ROOT" ] || [ ! -x "$ASH_PY_ENVS_ROOT" ]; then
        echo " ++ warn ($0): ASH_PY_ENVS_ROOT: '$ASH_PY_ENVS_ROOT' isn't exists or accessible"
        return 1
    fi

    if [ -z "$1" ]; then
        local scope="$(basename `dirname "$PWD"`)"
        local preorder=(
            "$ASH_PY_ENVS_ROOT/$scope/$(basename "$PWD")"
            "$ASH_PY_ENVS_ROOT/$scope"
            "$PWD/env"
            "$PWD/.env"
            "$PWD/venv"
            "$PWD/.venv"
        )
        local reason="autodetect"
    else
        local preorder=(
            "$PWD/$1"
            "$1"
            "$ASH_PY_ENVS_ROOT/$1"
        )
        local reason="select by '$1'"
    fi

    local order=()
    for dir in ${preorder[@]}; do
        order+=("$(realpath "$dir" 2>/dev/null)")
    done

    local venv=''
    echo " -- info ($0): $reason, scan order: '${order[@]}'"
    for dir in ${order[@]}; do
        local dir="$(realpath "$dir")"
        if [ -f "$dir/bin/activate" ]; then
            local venv="$dir"
            echo " -- info ($0): use virtual env from '$venv'"
            break
        fi
    done

    if [ -z "$venv" ]; then
        echo " == fail ($0): virtual env isn't detected, check your '$PWD/.envrc'"
        return 2
    fi

    if [ -n "$VIRTUAL_ENV" ] || [ ! -f "$VIRTUAL_ENV/bin/activate" ]; then
        unset VIRTUAL_ENV
    else
        source "$VIRTUAL_ENV/bin/activate" && deactivate
    fi
    source "$venv/bin/activate"
}
