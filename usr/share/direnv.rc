#
# https://direnv.net
#
# https://github.com/direnv/direnv/blob/master/docs/ruby.md
# https://github.com/direnv/direnv/wiki
# https://github.com/direnv/direnv/wiki/Nix
#
# Usage: use ruby <version>
#
# Loads the specified ruby version into the environment
#
# use_ruby() {
#     local ruby_dir=$HOME/.rubies/$1
#     load_prefix $ruby_dir
#     layout ruby
# }

layout_virtualenv() {
    if [ -z "$1" ]; then
        local venv="$(basename `dirname "$PWD"`)"
        echo " -- info ($0): '$venv' try parent root dir as env name" >&2

    else
        local venv="$1"

        if [ -d "$venv" ] && [ -x "$venv" ]; then
            echo " -- info ($0): '$venv' it's directory" >&2
        else
            echo " -- info ($0): '$venv' interpret as env name" >&2
        fi
    fi

    if [ ! -f "$ASH_PY_ENVS_ROOT/$venv/bin/activate" ]; then

        if [ -z "$1" ]; then
            echo " == fail ($0): '$ASH_PY_ENVS_ROOT/$venv/bin/activate' isn't exists, make it or pass another one in '$PWD/.envrc' " >&2

        else
            echo " == fail ($0): '$ASH_PY_ENVS_ROOT/$venv/bin/activate' isn't exists, check selected env '$1'" >&2
        fi
        return 1

    else

        if [ -z "$VIRTUAL_ENV" ] || [ ! -f "$VIRTUAL_ENV/bin/activate" ]; then
            unset VIRTUAL_ENV
        else
            source "$VIRTUAL_ENV/bin/activate" && deactivate
        fi

        source "$ASH_PY_ENVS_ROOT/$venv/bin/activate"
        return 0
    fi
}
